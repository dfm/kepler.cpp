name: Benchmark

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  test:
    name: Benchmark on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Download the previous benchmark results
        run: git clone --branch gh-pages $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git benchmark-results

      - name: Compile
        run: |
          cmake -B build -DKEPLER_BUILD_BENCHMARK=ON -DBUILD_TESTING=OFF .
          cmake --build build --parallel 2

      - name: Print specs
        run: build/benchmark/get_specs

      - name: Benchmark
        run: build/benchmark/benchmark --reporter=xml::out=benchmark.xml

      - name: Collect the results
        run: |
          python tools/benchmark_results/collect.py \
            --input-file benchmark.xml \
            --output-file benchmark-results/$GITHUB_REF/data.json \
            --identifier $GITHUB_SHA

      - name: Make the plots
        run: |
          python -m pip install pandas altair
          python tools/benchmark_results/summarize.py \
            --input-file benchmark-results/$GITHUB_REF/data.json \
            --output-file benchmark-results/$GITHUB_REF/plot.html

      - name: Commit the results
        if: github.event_name == 'push'
        run: |
          cd benchmark-results
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "Update benchmark results"
          git push https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
