name: Benchmark

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

permissions:
  contents: write
  deployments: write

jobs:
  test:
    name: Benchmark on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compile
        run: |
          cmake -B build -DKEPLER_BUILD_BENCHMARK=ON -DBUILD_TESTING=OFF .
          cmake --build build --parallel 2

      - name: Check size
        run: build/benchmark/get_simd_size

      - name: Benchmark
        run: build/benchmark/benchmark "[baseline]" --reporter=xml::out=benchmark.xml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Download the previous benchmark results
        run: git clone --branch gh-pages $REPO_URL benchmark-results
        env:
          REPO_URL: ${{ github.repositoryUrl }}

      - name: Collect the results
        run: |
          python tools/benchmark_results/collect.py \
            --input-file benchmark.xml \
            --output-file benchmark-results/$REF/data.json \
            --identifier $IDENTIFIER
        env:
          REF: ${{ github.ref }}
          IDENTIFIER: ${{ github.sha }}

      - name: Commit the results
        run: |
          cd benchmark-results
          git add .
          git commit -m "Update benchmark results"
          git push

      # - name: Save benchmark result
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     name: Kepler benchmarks
      #     tool: "catch2"
      #     output-file-path: benchmark.txt
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     auto-push: true
      #     alert-threshold: "200%"
      #     comment-on-alert: true
      #     fail-on-alert: true
      #     alert-comment-cc-users: "@dfm"
